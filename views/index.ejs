<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Easy Ticket</title>
    <link rel="stylesheet" href="/css/estilos.css">
    <link rel="stylesheet" href="/css/secciones.css">
    <link rel="stylesheet" href="/css/modal.css">
    <link rel="stylesheet" href="/css/chatbot.css">
    <style>
        .search-btn {
            background: none;
            border: none;
            cursor: pointer;
            padding: 8px;
            margin-right: 10px;
        }

        .search-btn img {
            vertical-align: middle;
        }

        /* Estilos para la secci√≥n de preventa */
#eventosPreventa {
    margin: 2rem 0;
    padding: 1rem;
    background-color: #000000;
    border-radius: 8px;
}

.preventa-badge {
    background-color: #ff5722;
    color: rgb(0, 0, 0);
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: bold;
    position: absolute;
    top: 10px;
    right: 10px;
}

.error-message {
    color: #d32f2f;
    font-weight: bold;
}

.reload-btn {
    background-color: #77da27;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    margin-top: 0.5rem;
}

.reload-btn:hover {
    background-color: #77da27;
}
    </style>
</head>
<body>
    <section class="principal">
        <header class="header">
            <a href="/" class="logo">
                <img src="/img/logo.png" alt="EasyTicket">
            </a>
            <nav class="nav">
                <a href="#">Conciertos</a>
                <a href="#">Deportes</a>
                <a href="#">Teatro</a>
                <a href="#">Culturales</a>
                <a href="#">Comedia</a>
                <a href="#">Festivales</a>
            </nav>
            <% if (user) { %>
                <% if (user.tipo === 'Admin') { %>
                    <!-- Header para Admin -->
                    <div class="profile-dropdown">
                        <button class="chatbot-btn" onclick="toggleChatbot()">
                            <img src="/img/chatbot.png" alt="Chatbot" width="40">
                        </button>
                        <button id="profileButton" class="profile-btn" onclick="toggleProfileMenu()">
                            <a href="/administrador">
                                <img src="/img/user.png" alt="Administrador">
                            </a>                            <span id="profileEmail"><%= user.firstName %></span>
                        </button>
                    </div>
                <% } else { %>
                    <!-- Header para Cliente -->
                   
                    <div class="profile-dropdown">
                        <button class="search-btn" onclick="toggleSearchSection()">
                            <img src="/img/lupa.png" alt="Buscar" width="20">
                        </button>
                        <button class="chatbot-btn" onclick="toggleChatbot()">
                            <img src="/img/chatbot.png" alt="Chatbot" width="40">
                        </button>
                        <button id="profileButton" class="profile-btn" onclick="toggleProfileMenu()">
                            <a href="/usuario">
                                <img src="/img/user.png" alt="Usuario">
                            </a><span id="profileEmail"><%= user.firstName %></span>
                        </button>
                    </div>
                <% } %>
            <% } else { %>
                <!-- Header para usuarios no autenticados -->
                <button class="search-btn" onclick="toggleSearchSection()">
                    <img src="/img/lupa.png" alt="Buscar" width="20">
                </button>
                <button class="chatbot-btn" onclick="toggleChatbot()">
                    <img src="/img/chatbot.png" alt="Chatbot" width="40">
                </button>
                <button id="loginButton" onclick="openModal()">Iniciar sesi√≥n</button>
            <% } %>
            
        </header>


        <section class="hero">
            <h1>No veas c√≥mo te lo cuentan...</h1>
            <p class="highlight">¬°V√≠velo en primera fila!</p>
            <p>Encuentra tus boletos para conciertos, eventos y espect√°culos.</p>
            <button onclick="location.href='#evento'">Ver eventos</button>
        </section>

        <div class="events-bar">
            <span>Camilo</span>
            <span>Chayanne</span>
            <span>More than magic</span>
            <span>Reggae Fest</span>
            <span>Picnic 2025</span>
            <span>Shawn Mendes</span>
        </div>
    </section>

    

<!-- üîé Secci√≥n de B√∫squeda Avanzada -->
<section id="searchSection" class="search-section">
    <h2>B√∫squeda Avanzada</h2>
    <form id="search-form">
        <div>
            <label for="fecha">Fecha:</label>
            <input type="date" id="fecha" name="fecha">
        </div>

        <div>
            <label for="ubicacion">Ubicaci√≥n:</label>
            <select id="ubicacion" name="ubicacion">
                <option value="">Todas</option>
                <option value="San Jos√©">San Jos√©</option>
                <option value="Alajuela">Alajuela</option>
            </select>
        </div>

        <div>
            <label for="tipo">Tipo de evento:</label>
            <select id="tipo" name="tipo">
                <option value="">Todos</option>
                <option value="Concierto">Concierto</option>
                <option value="Deporte">Deporte</option>
            </select>
        </div>

        <div>
            <label for="precio">Precio m√°ximo:</label>
            <input type="number" id="precio" name="precio" placeholder="M√°ximo ‚Ç°">
        </div>

        <button type="submit">Buscar</button>
    </form>
</section>

<!-- üéüÔ∏è Secci√≥n de Eventos con Preventa -->
<section id="eventosPreventa" class="events-section">
    <h2>Eventos en Preventa</h2>
    <div id="preventaContainer">
        <!-- Los eventos con preventa se cargar√°n aqu√≠ din√°micamente -->
    </div>
</section>

<script>
     const isLoggedIn = "<%= user ? 'true' : 'false' %>";
    const userTipo = "<%= user?.tipo || '' %>";
    const userEmail = "<%= user?.email || '' %>";
// Funci√≥n para cargar eventos con preventa
async function cargarEventosPreventa() {
    const container = document.getElementById('preventaContainer');
    container.innerHTML = '<p>Cargando eventos en preventa...</p>';

    if (!isLoggedIn || userTipo !== "Cliente") {
        container.innerHTML = '<p>Debes iniciar sesi√≥n como cliente para ver eventos en preventa.</p>';
        return;
    }

    try {
        const response = await fetch('/evento/con-preventa', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email: userEmail })
        });

        if (!response.ok) {
            throw new Error(`Error HTTP: ${response.status}`);
        }

        const eventos = await response.json();

        if (eventos.length === 0) {
            container.innerHTML = `
                <p>No hay eventos en preventa disponibles.</p>
                <p>Revisa m√°s tarde.</p>
            `;
            return;
        }

        container.innerHTML = '';
        eventos.forEach(evento => {
            const eventDiv = document.createElement('div');
            eventDiv.className = 'event';
            eventDiv.innerHTML = `
                <img src="${evento.imagen || '/img/evento-default.jpg'}" alt="${evento.nombre}">
                <div class="event-info">
                    <h3>${evento.nombre}</h3>
                    <p><strong>Lugar:</strong> ${evento.lugarNombre}</p>
                    <p><strong>Fecha:</strong> ${new Date(evento.fecha).toLocaleDateString()}</p>
                    <p><strong>Preventa hasta:</strong> ${new Date(evento.fechaFin).toLocaleDateString()}</p>
                    <p><strong>M√©todos de pago aceptados:</strong> ${evento.metodosPago}</p>
                </div>
                <div class="event-actions">
                    <a href="/evento/${evento.eventoId}" class="ver-evento-btn">Ver evento</a>
                </div>
                <div class="preventa-badge">PREVENTA</div>
            `;
            container.appendChild(eventDiv);
        });

    } catch (err) {
        console.error('Error al cargar preventas:', err);
        container.innerHTML = `
            <p class="error-message">Error al cargar eventos en preventa</p>
            <button onclick="cargarEventosPreventa()" class="reload-btn">Reintentar</button>
        `;
    }
}


// Llamar a la funci√≥n cuando la p√°gina cargue
if (document.getElementById('preventaContainer')) {
    document.addEventListener('DOMContentLoaded', cargarEventosPreventa);
}
</script>

<style>
.preventa-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #ff5722;
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
    font-weight: bold;
    font-size: 12px;
}

.events-section {
    margin-bottom: 40px;
}
</style>

<!-- üéüÔ∏è Secci√≥n de Eventos -->
<section id="eventos" class="events-section">
    <% eventos.forEach(evento => { %>
      <div class="event"
           data-ubicacion="<%= evento.ubicacion %>"
           data-tipo="<%= evento.tipo %>"
           data-fecha="<%= evento.fecha %>"
           data-precio="<%= evento.precio %>">
  
        <img src="<%= evento.imagen %>" alt="<%= evento.nombre %>">
        <div class="event-info">
          <h3><%= evento.nombre %></h3>
          <p>Ubicaci√≥n: <%= evento.ubicacion %></p>
          <p>Fecha: <%= evento.fecha %></p>
          <p>Precio: ‚Ç°<%= evento.precio %></p>
        </div>
        <div class="event-actions">
          <!-- Aqu√≠ la correcci√≥n: usamos 'evento.eventoId', no 'eventos.id' -->
          <a href="/evento/<%= evento.eventoId %>" class="ver-evento-btn">
            Ver evento
        </a>
        </div>
      </div>
    <% }) %>
  </section>
  
    
    

    <script>
         // Funci√≥n para alternar la visibilidad del men√∫ desplegable
         function toggleProfileMenu() {
            const dropdownMenu = document.getElementById('dropdownMenu');
            dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
        }

        // Cerrar el men√∫ si se hace clic fuera de √©l
        window.onclick = function(event) {
            if (!event.target.matches('.profile-btn')) {
                const dropdownMenu = document.getElementById('dropdownMenu');
                if (dropdownMenu.style.display === 'block') {
                    dropdownMenu.style.display = 'none';
                }
            }
        }

        // Funci√≥n para mostrar/ocultar la secci√≥n de b√∫squeda avanzada
function toggleSearchSection() {
    const searchSection = document.getElementById('searchSection');
    searchSection.classList.toggle('visible');
}

// Funci√≥n para filtrar eventos
function filtrarEventos() {
    const fechaSeleccionada = document.getElementById("fecha").value;
    const ubicacionSeleccionada = document.getElementById("ubicacion").value;
    const tipoSeleccionado = document.getElementById("tipo").value;
    const precioMaximo = document.getElementById("precio").value;

    document.querySelectorAll(".event").forEach(evento => {
        const fechaEvento = evento.dataset.fecha;
        const ubicacionEvento = evento.dataset.ubicacion;
        const tipoEvento = evento.dataset.tipo;
        const precioEvento = parseInt(evento.dataset.precio);

        let mostrar = true;

        if (fechaSeleccionada && fechaEvento !== fechaSeleccionada) mostrar = false;
        if (ubicacionSeleccionada && ubicacionEvento !== ubicacionSeleccionada) mostrar = false;
        if (tipoSeleccionado && tipoEvento !== tipoSeleccionado) mostrar = false;
        if (precioMaximo && precioEvento > parseInt(precioMaximo)) mostrar = false;

        evento.style.display = mostrar ? "block" : "none";
    });
}

// Asignar la funci√≥n de filtrado al formulario de b√∫squeda
document.getElementById('search-form').addEventListener('submit', function(e) {
    e.preventDefault();
    filtrarEventos();
});
    </script>

<!-- Chatbot Container -->
<div id="chatbotContainer" class="chatbot-container">
    <div class="chatbot-header">
        <h3>Asistente de EasyTicket</h3>
        <button onclick="toggleChatbot()" style="background:none; border:none; color:white; font-size:20px;">√ó</button>
    </div>
    <div id="chatbotMessages" class="chatbot-messages">
        <!-- Mensajes aparecer√°n aqu√≠ -->
    </div>
    <div class="chatbot-input">
        <input type="text" id="chatbotInput" placeholder="Escribe tu mensaje...">
        <button onclick="sendMessage()">Enviar</button>
    </div>
</div>
<script>
    // Funci√≥n para mostrar/ocultar el chatbot
    function toggleChatbot() {
        const chatbot = document.getElementById('chatbotContainer');
        chatbot.style.display = chatbot.style.display === 'flex' ? 'none' : 'flex';
        
        // Si se est√° mostrando, enviar mensaje de bienvenida
        if (chatbot.style.display === 'flex') {
            showWelcomeMessage();
        }
    }
    
    // Mensaje de bienvenida seg√∫n tipo de usuario
    // Reemplaza esta secci√≥n en tu script del chatbot
    function showWelcomeMessage() {
        const messagesDiv = document.getElementById('chatbotMessages');
        messagesDiv.innerHTML = '';
        
        // Verifica si hay un usuario y su tipo usando datos inyectados desde EJS
        const userType = '<%= user && user.tipo ? user.tipo : "" %>';
        const userName = '<%= user && user.firstName ? user.firstName : "" %>';
        
        if (userType === 'Admin') {
            addBotMessage("¬°Hola administrador! ¬øEn qu√© puedo ayudarte hoy?");
            addBotMessage("Puedes gestionar las preguntas frecuentes, habilitar/deshabilitar opciones del men√∫ o configurar respuestas autom√°ticas.");
        } else if (userType) {
            addBotMessage(`¬°Hola ${userName}! Soy tu asistente de EasyTicket.`);
            addBotMessage("Puedo ayudarte con: compra de boletos, consulta de eventos, problemas con tu cuenta y m√°s. ¬øEn qu√© necesitas ayuda?");
        } else {
            addBotMessage("¬°Hola! Bienvenido a EasyTicket.");
            addBotMessage("Puedo ayudarte a encontrar eventos, explicarte c√≥mo funciona nuestro servicio o resolver tus dudas. ¬øEn qu√© puedo ayudarte?");
        }
    }
    
    // Funci√≥n para enviar mensaje al chatbot
    function sendMessage() {
        const input = document.getElementById('chatbotInput');
        const message = input.value.trim();
        
        if (message) {
            addUserMessage(message);
            input.value = '';
            
            // Aqu√≠ ir√≠a la conexi√≥n con Dialogflow
            processUserMessage(message);
        }
    }
    
    // Funci√≥n para procesar el mensaje del usuario (conectar con Dialogflow)
    // Funci√≥n para procesar el mensaje del usuario con Dialogflow
async function processUserMessage(message) {
// Mostrar mensaje de "escribiendo..."
addBotMessage("...", true);

try {
    // Usar el ID de usuario como sessionId si est√° logueado, o generar uno aleatorio
    const sessionId = '<%= user ? user.id : "guest-" + Math.random().toString(36).substring(2, 15) %>';
    
    const response = await fetch('/api/chatbot', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
            message: message,
            sessionId: sessionId
        })
    });
    
    const result = await response.json();
    
    // Eliminar el "escribiendo..."
    const messagesDiv = document.getElementById('chatbotMessages');
    if (messagesDiv.lastChild && messagesDiv.lastChild.innerText === "...") {
        messagesDiv.removeChild(messagesDiv.lastChild);
    }
    
    if (result.success) {
        addBotMessage(result.response);
        
        // Manejar acciones especiales basadas en el intent
        handleIntent(result.intent, result.parameters);
    } else {
        addBotMessage("Lo siento, hubo un error al procesar tu mensaje. Por favor intenta nuevamente.");
    }
} catch (err) {
    console.error('Error:', err);
    
    // Eliminar el "escribiendo..." en caso de error
    const messagesDiv = document.getElementById('chatbotMessages');
    if (messagesDiv.lastChild && messagesDiv.lastChild.innerText === "...") {
        messagesDiv.removeChild(messagesDiv.lastChild);
    }
    
    addBotMessage("Lo siento, estoy teniendo problemas para responder. Por favor intenta m√°s tarde.");
}
}

// Funci√≥n para manejar intenciones espec√≠ficas
function handleIntent(intent, parameters) {
console.log("Intent detectado:", intent);
console.log("Par√°metros:", parameters);

// Aqu√≠ puedes agregar l√≥gica para manejar intenciones espec√≠ficas
// Por ejemplo:
if (intent === 'Default Welcome Intent') {
    // Podr√≠as personalizar la bienvenida
} else if (intent === 'Consulta.Eventos') {
    // Mostrar eventos relevantes basados en par√°metros
}
// ... m√°s l√≥gica seg√∫n tus intenciones en Dialogflow
}
    
    // Funciones auxiliares para agregar mensajes
    function addUserMessage(text) {
        const messagesDiv = document.getElementById('chatbotMessages');
        const messageDiv = document.createElement('div');
        messageDiv.className = 'message user-message';
        messageDiv.textContent = text;
        messagesDiv.appendChild(messageDiv);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }
    
    function addBotMessage(text, isTyping = false) {
        const messagesDiv = document.getElementById('chatbotMessages');
        const messageDiv = document.createElement('div');
        messageDiv.className = 'message bot-message';
        messageDiv.textContent = text;
        messagesDiv.appendChild(messageDiv);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
        
        if (isTyping) {
            messageDiv.id = 'typingIndicator';
        }
    }
    
    // Permitir enviar mensaje con Enter
    document.getElementById('chatbotInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script>
   </body>
<!-- üì© Secci√≥n de Atenci√≥n al Cliente -->
<section class="customer-service">
    <h2>Atenci√≥n al Cliente</h2>
    <form id="consultaForm" class="customer-form">
        <label for="email">Correo Electr√≥nico</label>
        <input type="email" id="email" name="email" 
               value="<%= user ? user.email : '' %>" 
               placeholder="Tu correo" required>
        <p>Se estar√° enviando una respuesta a tu correo electr√≥nico lo m√°s pronto posible</p>
        <label for="message">Mensaje</label>
        <textarea id="message" name="message" placeholder="Escribe tu mensaje aqu√≠" required></textarea>
        <button type="submit">Enviar</button>
        <div id="consultaResult" style="margin-top: 10px;"></div>
    </form>
</section>

<script>
// Manejar env√≠o de consulta
document.getElementById('consultaForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const submitBtn = e.target.querySelector('button[type="submit"]');
    const resultDiv = document.getElementById('consultaResult');
    
    submitBtn.disabled = true;
    resultDiv.textContent = 'Enviando...';
    resultDiv.style.color = 'black';
    
    try {
        const response = await fetch('/atencion/enviar-consulta', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: formData.get('email'),
                mensaje: formData.get('message')
            })
        });
        
        const result = await response.json();
        
        if (result.success) {
            resultDiv.textContent = result.message;
            resultDiv.style.color = 'green';
            e.target.reset();
        } else {
            resultDiv.textContent = result.error || 'Error al enviar la consulta';
            resultDiv.style.color = 'red';
        }
    } catch (err) {
        resultDiv.textContent = 'Error de conexi√≥n. Int√©ntalo de nuevo.';
        resultDiv.style.color = 'red';
    } finally {
        submitBtn.disabled = false;
    }
});
</script>

<!-- ‚ùì Secci√≥n de Preguntas Frecuentes -->
<section class="faq">
    <h2>Preguntas Frecuentes</h2>
    <div class="faq-container" id="faqContainer">
        <!-- Las FAQs se cargar√°n aqu√≠ din√°micamente -->
    </div>
</section>

<script>
// Cargar FAQs al cargar la p√°gina
document.addEventListener('DOMContentLoaded', async () => {
    try {
        const response = await fetch('/atencion/faqs');
        const faqs = await response.json();
        
        const container = document.getElementById('faqContainer');
        
        // Agrupar por categor√≠a
        const faqsPorCategoria = {};
        faqs.forEach(faq => {
            if (!faqsPorCategoria[faq.categoria]) {
                faqsPorCategoria[faq.categoria] = [];
            }
            faqsPorCategoria[faq.categoria].push(faq);
        });
        
        // Mostrar FAQs
        for (const [categoria, items] of Object.entries(faqsPorCategoria)) {
            const categoriaElement = document.createElement('div');
            categoriaElement.className = 'faq-category';
            categoriaElement.innerHTML = `<h3>${categoria}</h3>`;
            
            items.forEach(faq => {
                const faqElement = document.createElement('div');
                faqElement.className = 'faq-item';
                faqElement.innerHTML = `
                    <div class="faq-question">${faq.pregunta}</div>
                    <div class="faq-answer">${faq.respuesta}</div>
                `;
                categoriaElement.appendChild(faqElement);
            });
            
            container.appendChild(categoriaElement);
        }
    } catch (err) {
        console.error('Error al cargar FAQs:', err);
    }
});
</script>

<!-- Modal de Inicio de Sesi√≥n -->
<div id="loginModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Iniciar Sesi√≥n</h2>
        <form id="loginForm">
            <label for="email">Correo Electr√≥nico</label>
            <input type="email" id="email" name="email" placeholder="Tu correo" required>

            <label for="password">Contrase√±a</label>
            <input type="password" id="password" name="password" placeholder="Tu contrase√±a" required>

            <div class="actions">
                <button type="submit" class="login">Iniciar Sesi√≥n</button>
                <button type="button" class="register" onclick="openRegisterModal()">Registrarse</button>
            </div>
            <a href="#" class="forgot" onclick="openForgotPasswordModal()">Olvid√© mi contrase√±a</a>
        </form>
    </div>
</div>

<!-- Modal de Registro -->
<div id="registerModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close" onclick="closeRegisterModal()">&times;</span>
        <h2>Registrarse</h2>
        <form id="registerForm">
            <label for="firstName">Nombres</label>
            <input type="text" id="firstName" name="firstName" placeholder="Tu nombre" required>

            <label for="lastName">Apellidos</label>
            <input type="text" id="lastName" name="lastName" placeholder="Tus apellidos" required>

            <label for="province">Provincia</label>
            <select id="province" name="province" required>
                <option value="">Seleccione una provincia</option>
                <option value="Cartago">Cartago</option>
                <option value="San Jos√©">San Jos√©</option>
                <option value="Heredia">Heredia</option>
                <option value="Alajuela">Alajuela</option>
                <option value="Lim√≥n">Lim√≥n</option>
                <option value="Guanacaste">Guanacaste</option>
                <option value="Puntarenas">Puntarenas</option>
            </select>

            <label for="registerEmail">Correo Electr√≥nico</label>
            <input type="email" id="registerEmail" name="email" placeholder="Tu correo" required>

            <label for="registerPassword">Contrase√±a</label>
            <input type="password" id="registerPassword" name="password" placeholder="Tu contrase√±a" required>

            <label for="confirmPassword">Confirmaci√≥n Contrase√±a</label>
            <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirma tu contrase√±a" required>

            <button type="submit" class="register-button">Registrarse</button>
        </form>
    </div>
</div>

<!-- Modal de Recuperaci√≥n de Contrase√±a -->
<div id="forgotPasswordModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close" onclick="closeForgotPasswordModal()">&times;</span>
        <h2>Recuperar contrase√±a</h2>
        <p>Digita el correo electr√≥nico que ingresaste al registrarte y se te enviar√°n las instrucciones para restablecer la contrase√±a</p>
        <form id="forgotPasswordForm">
            <label for="forgotEmail">Correo Electr√≥nico</label>
            <input type="email" id="forgotEmail" name="email" placeholder="Tu correo" required>
            <div class="actions">
                <button type="button" class="cancel" onclick="closeForgotPasswordModal()">Cancelar</button>
                <button type="submit" class="reset-password">Enviar Instrucciones</button>
            </div>
        </form>
        <div id="forgotPasswordMessage" style="margin-top: 15px;"></div>
    </div>
</div>

<!-- Modal de Autenticaci√≥n de Dos Factores -->
<div id="twoFactorModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close" onclick="closeTwoFactorModal()">&times;</span>
        <h2>Autentificaci√≥n de dos factores</h2>
        <p>Se te envi√≥ un c√≥digo de verificaci√≥n a tu correo electr√≥nico</p>
        <form id="verificationForm"> <!-- A√±ade un id al formulario -->
            <label for="verificationCode">C√≥digo de verificaci√≥n</label>
            <input type="text" id="verificationCode" placeholder="Ingrese el c√≥digo" required>
            <div class="actions">
                <button type="submit" class="verify">Verificaci√≥n</button> <!-- Cambia a type="submit" -->
            </div>
        </form>
        <a href="#" class="resend">Reenviar c√≥digo</a>
    </div>
</div>
<script>

    // Funci√≥n para manejar el env√≠o del formulario de registro
    document.getElementById("registerForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch("http://localhost:3003/usuarios/registrar", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            });

            const result = await response.json();

            if (result.success) {
                alert("Usuario registrado exitosamente");
                closeRegisterModal();
            } else {
                alert(result.message);
            }
        } catch (err) {
            console.error("‚ùå Error al registrar usuario", err);
            alert("Error en el servidor. Int√©ntalo de nuevo m√°s tarde.");
        }
    });
    // Funci√≥n para manejar el env√≠o del formulario de inicio de sesi√≥n
    document.getElementById("loginForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch("/usuarios/login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            });

            const result = await response.json();

            if (result.success) {
                alert("C√≥digo de verificaci√≥n enviado a tu correo.");
                openTwoFactorModal(); // Abrir el modal de autenticaci√≥n de dos factores
            } else {
                alert(result.message);
            }
        } catch (err) {
            console.error("‚ùå Error al iniciar sesi√≥n", err);
            alert("Error en el servidor. Int√©ntalo de nuevo m√°s tarde.");
        }
    });

   // Funci√≥n para manejar el env√≠o del formulario de autenticaci√≥n de dos factores
    document.getElementById("verificationForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const verificationCode = document.getElementById("verificationCode").value;

        try {
            const response = await fetch("/usuarios/verificarCodigo", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ code: verificationCode }),
            });

            const result = await response.json();

            if (result.success) {
                closeTwoFactorModal();
                window.location.reload(); // This will refresh the page with the user session
            } else {
                alert(result.message);
            }
        } catch (err) {
            console.error("‚ùå Error al verificar el c√≥digo", err);
            alert("Error en el servidor. Int√©ntalo de nuevo m√°s tarde.");
        }
    });

    // Manejo del formulario de recuperaci√≥n de contrase√±a
    document.getElementById("forgotPasswordForm").addEventListener("submit", async function(event) {
        event.preventDefault();
        
        const formData = new FormData(event.target);
        const email = formData.get('email');
        const messageDiv = document.getElementById('forgotPasswordMessage');
        const submitBtn = event.target.querySelector('button[type="submit"]');
        
        // Mostrar estado de carga
        submitBtn.disabled = true;
        submitBtn.textContent = "Enviando...";
        messageDiv.innerHTML = '';
        
        try {
            const response = await fetch('/usuarios/solicitar-recuperacion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: email })
            });
            
            const result = await response.json();
            
            if (result.success) {
                messageDiv.innerHTML = '<p style="color: green;">Si el correo existe en nuestro sistema, recibir√°s un enlace para restablecer tu contrase√±a.</p>';
                event.target.reset();
                // Cierra el modal despu√©s de 3 segundos
                setTimeout(() => {
                    closeForgotPasswordModal();
                }, 3000);
            } else {
                messageDiv.innerHTML = `<p style="color: red;">${result.message || 'Error al procesar la solicitud'}</p>`;
            }
        } catch (err) {
            console.error('Error en la solicitud:', err);
            messageDiv.innerHTML = '<p style="color: red;">Error al conectar con el servidor. Verifica tu conexi√≥n a internet.</p>';
        } finally {
            // Restaurar bot√≥n
            submitBtn.disabled = false;
            submitBtn.textContent = "Enviar Instrucciones";
        }
    });
    
    

    function seleccionarEvento(nombre) {
        alert("Evento seleccionado: " + nombre);
    }

    function openModal() {
    document.getElementById('loginModal').style.display = 'flex';
    }

    function closeModal() {
        document.getElementById('loginModal').style.display = 'none';
    }

    function openRegisterModal() {
        closeModal();
        document.getElementById('registerModal').style.display = 'flex';
    }

    function closeRegisterModal() {
        document.getElementById('registerModal').style.display = 'none';
    }

    function openForgotPasswordModal() {
        closeModal();
        document.getElementById('forgotPasswordModal').style.display = 'flex';
    }

    function closeForgotPasswordModal() {
        document.getElementById('forgotPasswordModal').style.display = 'none';
    }

    function openTwoFactorModal() {
        closeModal();
        document.getElementById('twoFactorModal').style.display = 'flex';
    }

    function closeTwoFactorModal() {
    document.getElementById('twoFactorModal').style.display = 'none';
}

    // Cerrar modales al hacer clic fuera de ellos
    window.onclick = function(event) {
        if (event.target.classList.contains('modal')) {
            event.target.style.display = 'none';
        }
    }
</script>
<script src="/js/filtro.js"></script>
<script src="/js/main.js"></script>

</html>
